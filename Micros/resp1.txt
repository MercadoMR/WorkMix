/*
 * LCDASM.asm
 *
 *  Created: 20/01/2021 05:13:43 a. m.
 *   Author: MIMR
 */ 
 .include "m328Pdef.inc"
 .def temp = r16
 .def cont1 = r17
 .def cont2 = r18
 .def cont3 = r19
 .def caracter = r20

 ; PD7-PD4 -> D7-D4 | PD3 -> E | PD2 -> RS

 .cseg
 .org $0000
 rjmp RESET

.macro escribir_caracter
	;****** ACTIVAR ESCRITURA EN DDRAM
	ldi temp,$04
	out portd,temp
	;****** ESCRITURA DE CARACTERES
	;Envio de los MSB
	ldi temp,$F0
	and temp,@0   ; Copiar los 4 MSB
	ori temp,$0C  ; E = 1 , RS = 1 
	out portd,temp
	andi temp,$F4 ; E = 0 , RS = 1
	out portd,temp
	;Envio de los LSB
	ldi temp,$0F
	and temp,@0   ; Copiar los 4 LSB
	swap temp	  ; Cambiar de posicion los bits
	nop
	ori temp,$0C  ; E = 1 , RS = 1
	out portd,temp
	andi temp,$F4 ; E = 0 , RS = 1
	out portd,temp
	;****** DESACTIVAR ESCRITURA EN DDRAM
	ldi temp,$00
	out portd,temp
.endmacro

RESET:
	ldi temp,$FE ;PD0 como entrada, los demas salida
	out ddrd,temp
	rcall cfg_display
	ldi caracter, 'H'
	escribir_caracter caracter
	ldi caracter, 'O'
	escribir_caracter caracter
	ldi caracter, 'L'
	escribir_caracter caracter
	ldi caracter, 'A'
	escribir_caracter caracter
	ldi caracter, ' '
	escribir_caracter caracter
	ldi caracter, ':'
	escribir_caracter caracter
	ldi caracter, ')'
	escribir_caracter caracter
rjmp main

main: nop
rjmp main

cfg_display:
	rcall delay_16ms
	;****** Funcion SET con interfaz de ocho bits
	ldi temp,$38 ; E=1
	out portd,temp
	ldi temp,$30 ; E=0
	out portd,temp
	;Delay de 4ms
	rcall delay_1ms
	rcall delay_1ms
	rcall delay_1ms
	rcall delay_1ms
	ldi temp,$38 ; E=1
	out portd,temp
	ldi temp,$30 ; E=0
	out portd,temp
	;Delay de 50us
	rcall delay_50us
	ldi temp,$38 ; E=1
	out portd,temp
	ldi temp,$30 ; E=0
	out portd,temp
	;****** Funcion SET Indicar cuatro bits
	ldi temp,$28 ; SET & E=1
	out portd,temp
	ldi temp,$20 ; SET & E=0
	out portd,temp
	;****** Funcion SET Indicar dos lineas
	ldi temp,$28 ; SET & E=1
	out portd,temp
	ldi temp,$20 ; SET & E=0
	out portd,temp
	nop
	ldi temp,$88 ; SET & E=1
	out portd,temp
	ldi temp,$82 ; SET & E=0
	out portd,temp
	;****** ON/OFF display
	ldi temp,$08 ; SET & E=1
	out portd,temp
	ldi temp,$00 ; SET & E=0
	out portd,temp
	nop
	ldi temp,$E8 ; SET & E=1
	out portd,temp
	ldi temp,$E2 ; SET & E=0
	out portd,temp
	;****** Modo de entrada (Incrementos uno en uno y mover cursor al ingresar caracter)
	ldi temp,$08 ; SET & E=1
	out portd,temp
	ldi temp,$00 ; SET & E=0
	out portd,temp
	nop
	ldi temp,$68 ; SET & E=1
	out portd,temp
	ldi temp,$62 ; SET & E=0
	out portd,temp
	ret

delay_16ms:ldi cont3,16
lazo:	rcall delay_1ms
	dec cont3
	brne lazo
	ret

delay_1ms:ldi cont1,16
lazo3:	ldi cont2,255
lazo2:	ldi temp,255
lazo1:	nop ;Agregar 16 nops si la freq del oscilador es 16Mhz
	dec temp
	brne lazo1
	dec cont2
	brne lazo2
	dec cont1
	brne lazo3
	ret

delay_50us: ldi cont1, 50
lazo4: ldi cont2, 16
lazo5: nop
	 dec cont2
	 brne lazo5
	 dec cont1
	 brne lazo4
	 ret
/**
	ldi temp,$4C ; E=1
	out portd,temp
	ldi temp,$44 ; E=0
	out portd,temp
	nop
	ldi temp,$8C ; E=1
	out portd,temp
	ldi temp,$84 ; E=0
	out portd,temp
**/